#version 450

struct particle_t
{
    vec2 position;
    vec2 velocity;
};

layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;

layout(set = 1, binding = 0) buffer t_particles
{
    particle_t b_particles[];
};
layout(set = 2, binding = 0) uniform t_delta_time
{
    float u_delta_time;
};
layout(set = 2, binding = 1) uniform t_num_particles
{
    uint u_num_particles;
};
layout(set = 2, binding = 2) uniform t_mouse_position
{
    vec2 u_mouse_position;
};
layout(set = 2, binding = 3) uniform t_force
{
    float u_force;
};

void main()
{
    const uint id = gl_GlobalInvocationID.x;
    if (id >= u_num_particles)
    {
        return;
    }

    particle_t particle = b_particles[id];

    vec2 direction = particle.position - u_mouse_position;
    vec2 force = normalize(direction) * u_force * u_delta_time / max(length(direction), 0.001f);
    
    particle.velocity += force;
    particle.position += particle.velocity;

    b_particles[id] = particle;
}